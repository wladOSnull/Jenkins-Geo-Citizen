def ip_server, ip_db, vari

pipeline {
    
    agent any

    environment {
        PATH = "/opt/maven/bin:$PATH"
    }

    stages {
    
        /*stage ('Clean current workspace') {
            steps {
                // remove/reset current workspace directory
                deleteDir()
            }
        }*/

        stage ('Checkout Geo Citizen project') {
            steps {
                script {
                    checkout([
                        $class: 'GitSCM', 
                        branches: [[
                            name: '*/main'
                        ]], 
                        extensions: [], 
                        userRemoteConfigs: [[
                            url: 'https://github.com/wladOSnull/Geocit134/'
                        ]]
                    ])
                
                    properties([
                        pipelineTriggers([
                            githubPush()
                        ])
                    ])
                }

            }
        }

        stage('Get IP of instances') {
            steps {
                script {
                    ip_server = sh(returnStdout: true, script: "gcloud compute instances list --format='value(networkInterfaces.accessConfigs.natIP)' --filter=name:server --zones=us-central1-a | awk -F[\\'\\'] '{print \$2}'").trim()
                    ip_db = sh(returnStdout: true, script: "gcloud compute instances list --format='value(networkInterfaces.networkIP)' --filter=name:db --zones=us-central1-a").trim()
                }
            }
        }
        
        stage('Project fixing / configuration') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'bdfa4956-ceb7-4c72-a011-cb649446e915', passwordVariable: 'email_pass', usernameVariable: 'email_login')]) {

                    withEnv(["server=$ip_server", "db=$ip_db"]) {

                        script {

                            sh '''#!/bin/bash
                                pwd
                                ls -la
                                echo ${WORKSPACE}
                                echo ${JOB_NAME}
                                ./jenkins/fix.sh ${server} ${db} ${email_login} ${email_pass}
                            '''
                        }
                    }                    
                }
            }
        }        
        
        stage('Build Geo Citizen with Maven and deploy to Nexus (by Maven pom.xml)') {
            steps {
                sh("mvn clean install deploy")
            }
        }
    }
}


