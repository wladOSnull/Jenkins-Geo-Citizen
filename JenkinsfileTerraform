pipeline {

    agent any

    stages {
        
        stage('Slack initial message') {
            steps {
                slackSend color: 'good', message: "> *Start pipeline*: ${BUILD_TAG}"
            }
        }
    
        stage('Terragrunt repository checkout') {
            steps {
                slackSend color: 'good', message: "Terragrunt checkout ..."
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/wladOSnull/Terraform-Geo-Citizen']]])
            }
        }
        
        stage('Terragrunt init') {
            steps {
                sh'''
                    cd geo_terragrunt/deployments
                    terragrunt init
                    terragrunt validate
                '''
            }
        }

        stage('Terragrunt action') {
            steps {
                echo "Terragrunt pipeline actions is: terraform ${tfaction}"
                slackSend color: 'warning', message: "Terragrunt action: ${tfaction}"
                sh"""
                    cd geo_terragrunt/deployments/prod
                    yes | terragrunt ${tfaction}
                """
            }
        }

        stage('Slack result message') {
            
            steps {
                slackSend color: 'warning', message: "Terragrunt result:"                
            }
        }        
 
        stage('Slack result detail message') {
            steps {
                slackSend color: 'good', message: "${currentBuild.durationString}"
                slackSend color: 'good', message: "${currentBuild.currentResult}"                
                slackSend color: 'good', message: '> *End pipeline*'
            }
        }
        
    }
}
